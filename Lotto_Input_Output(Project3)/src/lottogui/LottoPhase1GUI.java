/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lottogui;

import java.awt.Button;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
//import org.junit.Test;
//import static org.junit.Assert.assertFalse;
//import static org.junit.Assert.assertTrue; // TRIED USING REGEX, TOO COMPLEX.

/**
 *
 * @author x15015556
 */
public class LottoPhase1GUI extends javax.swing.JFrame implements ActionListener {
    
    Timer t = new Timer (1000,this); //this is for the time printed
    private int[] secret = new int[5];
    private int[][] num = new int[3][5];
//    private int[][] var = new int[3][5];
    private int correctL1;
    private int correctL2;
    private int correctL3;
    private int[] quickPickL1 = new int[5];
    private int[] quickPickL2 = new int[5];
    private int[] quickPickL3 = new int[5];
    private boolean dup; //this is actually used
    
    /**
     * Creates new form LottoPhase1GUI
     */
    public LottoPhase1GUI() {

        t.start(); //starts clicking hidden refresh button every 1 second to have active current time
        
        initComponents();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lottoPhase1Lbl = new javax.swing.JLabel();
        selectNumLbl = new javax.swing.JLabel();
        line00Tf = new javax.swing.JTextField();
        line10Tf = new javax.swing.JTextField();
        line20Tf = new javax.swing.JTextField();
        line02Tf = new javax.swing.JTextField();
        line01Tf = new javax.swing.JTextField();
        line11Tf = new javax.swing.JTextField();
        line21Tf = new javax.swing.JTextField();
        line22Tf = new javax.swing.JTextField();
        line12Tf = new javax.swing.JTextField();
        line03Tf = new javax.swing.JTextField();
        line13Tf = new javax.swing.JTextField();
        line23Tf = new javax.swing.JTextField();
        line04Tf = new javax.swing.JTextField();
        line14Tf = new javax.swing.JTextField();
        line24Tf = new javax.swing.JTextField();
        line1Lbl = new javax.swing.JLabel();
        line2Lbl = new javax.swing.JLabel();
        line3Lbl = new javax.swing.JLabel();
        resultsLbl = new javax.swing.JLabel();
        displayResults0Lbl = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        matched1Lbl = new javax.swing.JLabel();
        matched2Lbl = new javax.swing.JLabel();
        matched3Lbl = new javax.swing.JLabel();
        matched1NumLbl = new javax.swing.JLabel();
        matched2NumLbl = new javax.swing.JLabel();
        matched3NumLbl = new javax.swing.JLabel();
        playBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        lottoph2Btn = new javax.swing.JButton();
        lottoPhase2TextLbl = new javax.swing.JLabel();
        bottomSep = new javax.swing.JSeparator();
        phase1TextLbl = new javax.swing.JLabel();
        quickPickL1Btn = new javax.swing.JButton();
        quickPickL2Btn = new javax.swing.JButton();
        quickPickL3Btn = new javax.swing.JButton();
        duplicateLbl = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        showSavedNumsBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        savedNumbersTextLbl = new javax.swing.JLabel();
        mostRecentLbl = new javax.swing.JLabel();
        savedLine1Lbl = new javax.swing.JLabel();
        savedLine2 = new javax.swing.JLabel();
        savedLine3 = new javax.swing.JLabel();
        savedNumsDisplayL1Lbl = new javax.swing.JLabel();
        savedNumsDisplayL2Lbl = new javax.swing.JLabel();
        savedNumsDisplayL3Lbl = new javax.swing.JLabel();
        savedMessageLbl = new javax.swing.JLabel();
        savedNumbersTimeLbl = new javax.swing.JLabel();
        topSep = new javax.swing.JSeparator();
        middleSep = new javax.swing.JSeparator();
        currentTimeLbl = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();
        changeResultsBtn = new javax.swing.JButton();
        secretNum1Tf = new javax.swing.JTextField();
        secretNum2Tf = new javax.swing.JTextField();
        secretNum3Tf = new javax.swing.JTextField();
        secretNum4Tf = new javax.swing.JTextField();
        secretNum5Tf = new javax.swing.JTextField();
        genSecretLbl = new javax.swing.JLabel();
        genResultsBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lottoPhase1Lbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lottoPhase1Lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lottogui/lotto.jpg"))); // NOI18N

        selectNumLbl.setText("Please select your numbers from 1 - 40, no duplicates (Please input number in all fields):");

        line00Tf.setText("0");
        line00Tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                line00TfActionPerformed(evt);
            }
        });

        line10Tf.setText("0");
        line10Tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                line10TfActionPerformed(evt);
            }
        });

        line20Tf.setText("0");
        line20Tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                line20TfActionPerformed(evt);
            }
        });

        line02Tf.setText("0");

        line01Tf.setText("0");

        line11Tf.setText("0");
        line11Tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                line11TfActionPerformed(evt);
            }
        });

        line21Tf.setText("0");

        line22Tf.setText("0");

        line12Tf.setText("0");

        line03Tf.setText("0");

        line13Tf.setText("0");

        line23Tf.setText("0");
        line23Tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                line23TfActionPerformed(evt);
            }
        });

        line04Tf.setText("0");

        line14Tf.setText("0");

        line24Tf.setText("0");

        line1Lbl.setText("Line 1");

        line2Lbl.setText("Line 2");

        line3Lbl.setText("Line 3");

        resultsLbl.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        resultsLbl.setForeground(new java.awt.Color(255, 102, 0));
        resultsLbl.setText("<html><u>Lotto Results:</u></html>");

        displayResults0Lbl.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        displayResults0Lbl.setForeground(new java.awt.Color(255, 102, 0));

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lottogui/backBtn32x32.png"))); // NOI18N
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        matched1Lbl.setForeground(new java.awt.Color(255, 153, 0));
        matched1Lbl.setText("Numbers matched on Line 1:");

        matched2Lbl.setForeground(new java.awt.Color(255, 153, 0));
        matched2Lbl.setText("Numbers matched on Line 2:");

        matched3Lbl.setForeground(new java.awt.Color(255, 153, 0));
        matched3Lbl.setText("Numbers matched on Line 3:");

        matched1NumLbl.setForeground(new java.awt.Color(255, 153, 0));

        matched2NumLbl.setForeground(new java.awt.Color(255, 153, 0));

        matched3NumLbl.setForeground(new java.awt.Color(255, 153, 0));

        playBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lottogui/play_full_color.png"))); // NOI18N
        playBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playBtnActionPerformed(evt);
            }
        });

        exitBtn.setForeground(new java.awt.Color(255, 153, 0));
        exitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lottogui/exitBtn32x32.png"))); // NOI18N
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        lottoph2Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lottogui/phase2.png"))); // NOI18N
        lottoph2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lottoph2BtnActionPerformed(evt);
            }
        });

        phase1TextLbl.setFont(new java.awt.Font("Lucida Calligraphy", 3, 24)); // NOI18N
        phase1TextLbl.setText("Phase 1");

        quickPickL1Btn.setText("Quick Pick");
        quickPickL1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickPickL1BtnActionPerformed(evt);
            }
        });

        quickPickL2Btn.setText("Quick Pick");
        quickPickL2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickPickL2BtnActionPerformed(evt);
            }
        });

        quickPickL3Btn.setText("Quick Pick");
        quickPickL3Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickPickL3BtnActionPerformed(evt);
            }
        });

        duplicateLbl.setForeground(new java.awt.Color(255, 0, 0));

        saveBtn.setBackground(new java.awt.Color(0, 0, 0));
        saveBtn.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("Save numbers");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        showSavedNumsBtn.setBackground(new java.awt.Color(102, 102, 102));
        showSavedNumsBtn.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        showSavedNumsBtn.setForeground(new java.awt.Color(255, 255, 255));
        showSavedNumsBtn.setText("Load saved numbers");
        showSavedNumsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showSavedNumsBtnActionPerformed(evt);
            }
        });

        resetBtn.setBackground(new java.awt.Color(153, 153, 153));
        resetBtn.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        resetBtn.setForeground(new java.awt.Color(255, 255, 255));
        resetBtn.setText("Delete saved numbers");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        savedNumbersTextLbl.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        savedNumbersTextLbl.setForeground(new java.awt.Color(51, 204, 0));
        savedNumbersTextLbl.setText("SAVED NUMBERS:");

        mostRecentLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        mostRecentLbl.setText("Saved numbers:");

        savedLine1Lbl.setText("Saved Line 1:");

        savedLine2.setText("Saved Line 2: ");

        savedLine3.setText("Saved Line 3:");

        savedMessageLbl.setForeground(new java.awt.Color(255, 0, 51));
        savedMessageLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        savedNumbersTimeLbl.setForeground(new java.awt.Color(0, 204, 0));
        savedNumbersTimeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        currentTimeLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        currentTimeLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        refreshBtn.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        changeResultsBtn.setText("Change results");
        changeResultsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeResultsBtnActionPerformed(evt);
            }
        });

        secretNum1Tf.setText("0");
        secretNum1Tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secretNum1TfActionPerformed(evt);
            }
        });

        secretNum2Tf.setText("0");

        secretNum3Tf.setText("0");

        secretNum4Tf.setText("0");

        secretNum5Tf.setText("0");
        secretNum5Tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secretNum5TfActionPerformed(evt);
            }
        });

        genSecretLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        genSecretLbl.setForeground(new java.awt.Color(255, 0, 0));

        genResultsBtn.setText("Generate results");
        genResultsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genResultsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bottomSep)
            .addComponent(topSep)
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(lottoPhase2TextLbl))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(213, 213, 213))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(currentTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158)
                        .addComponent(lottoph2Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(matched3Lbl)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(matched3NumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(matched1Lbl)
                                            .addComponent(matched2Lbl))
                                        .addGap(46, 46, 46)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(matched1NumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(matched2NumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(129, 129, 129)
                                        .addComponent(secretNum1Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(secretNum2Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(secretNum3Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(secretNum4Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(secretNum5Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(genSecretLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(resultsLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addComponent(displayResults0Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeResultsBtn))
                            .addComponent(middleSep)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectNumLbl)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lottoPhase1Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(phase1TextLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(line1Lbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(line00Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(line01Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(line02Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(line03Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(line04Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(quickPickL1Btn)
                                        .addGap(41, 41, 41)
                                        .addComponent(genResultsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(line2Lbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(line10Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(line11Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(line12Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(line13Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(line14Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(quickPickL2Btn)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(line3Lbl)
                        .addGap(17, 17, 17)
                        .addComponent(line20Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(line21Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(line22Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(line23Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(line24Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quickPickL3Btn)
                        .addGap(55, 55, 55)
                        .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(duplicateLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(173, 173, 173)
                                .addComponent(savedNumbersTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(saveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(savedNumbersTextLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(showSavedNumsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(resetBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(20, 20, 20)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(savedLine2)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(savedNumsDisplayL2Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(savedLine3)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(savedNumsDisplayL3Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(savedLine1Lbl)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(savedNumsDisplayL1Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(savedMessageLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(mostRecentLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(lottoPhase1Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(phase1TextLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectNumLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duplicateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(genResultsBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(line00Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(line01Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(line02Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(line03Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(line04Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(line1Lbl)
                        .addComponent(quickPickL1Btn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(line10Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line11Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line12Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line13Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line14Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quickPickL2Btn)
                            .addComponent(line2Lbl))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(line20Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line21Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line23Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line24Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line3Lbl)
                            .addComponent(line22Tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quickPickL3Btn)))
                    .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topSep, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(savedNumbersTextLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(savedMessageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mostRecentLbl)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(savedLine1Lbl)
                            .addComponent(savedNumsDisplayL1Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(savedLine2)
                            .addComponent(savedNumsDisplayL2Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(savedNumsDisplayL3Lbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(savedLine3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(saveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showSavedNumsBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(savedNumbersTimeLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(middleSep, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(resultsLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(displayResults0Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(matched1Lbl)
                                    .addComponent(matched1NumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(changeResultsBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(genSecretLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(matched2NumLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matched2Lbl)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(secretNum1Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(secretNum2Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(secretNum3Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(secretNum4Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(secretNum5Tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(matched3NumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matched3Lbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bottomSep, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lottoph2Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lottoPhase2TextLbl))
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void line00TfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_line00TfActionPerformed
//        playBtnActionPerformed play = new playBtnActionPerformed(java.awt.event.ActionEvent evt); 
//        play.setOnAction(event -> {
//            
//        
//        int value;
//        value = Integer.parseInt(line00Tf.getText());
//        
//        if(value<1 || value>40){
//            duplicateLbl.setText("No duplicates");
//        }
//        
//        else{
//            duplicateLbl.setText("");
//        }
//    }
//      WAS TRYING TO SEE IF THERE WAS A WAY TO VALIDATE NUMBER AFTER IT WAS TYPED, DIDN'T WORK, LEFT IT OUT. 
    }//GEN-LAST:event_line00TfActionPerformed

    private void line10TfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_line10TfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_line10TfActionPerformed

    private void line20TfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_line20TfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_line20TfActionPerformed

    private void line11TfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_line11TfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_line11TfActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        LottoPhase1GUI p1GUI = new LottoPhase1GUI();
        p1GUI.setVisible(false);
        dispose(); //closes this GUI
        
        LottoMainGUI mainGUI = new LottoMainGUI();
        mainGUI.setVisible(true); // Opens Main GUI
    }//GEN-LAST:event_backBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0); //exits application when user clicks the exit icon
    }//GEN-LAST:event_exitBtnActionPerformed
    
    private void playBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playBtnActionPerformed
        savedMessageLbl.setText(""); //resets Saved numbers message.
        boolean hasDuplicates = false;
        boolean outOfRange = false; //boolean values are used

        LottoPhase1 p1 = new LottoPhase1();
        DuplicatesRange dupr = new DuplicatesRange();
        
//////////// TRIED USING REGEX TO ELIMINATE TEXT IN TEXT FIELDS, NOT WORKING //////////////////        
//        Pattern pattern = Pattern.compile("\\d{3}");
//        Matcher matcher = pattern.matcher((CharSequence) line00Tf); //TRIED USING REGEX, TOO COMPLEX
//          String pattern = "A-Za-z"; //\\S\\.\\+\\-\\,\\!\\@\\#\\$\\€\\%\\^\\\\&\\*\\(\\)\\;\\:\\/\\|\\<\\>\\\"\\'\\_\\?\\!\\#\\+";
//        if( (line00Tf.getText().equals(pattern)) || (line01Tf.getText().equals(pattern)) || (line02Tf.getText().equals(pattern)) || (line03Tf.getText().equals(pattern)) || (line04Tf.getText().equals(pattern)) || (line10Tf.getText().equals(pattern)) || (line11Tf.getText().equals(pattern)) || (line12Tf.getText().equals(pattern)) || (line13Tf.getText().equals(pattern)) || (line04Tf.getText().equals(pattern)) || (line20Tf.getText().equals(pattern)) || (line21Tf.getText().equals(pattern)) || (line22Tf.getText().equals(pattern)) || (line23Tf.getText().equals(pattern)) || (line24Tf.getText().equals(pattern)) ) { //This is to catch users who leaves a text field blank. 
//            
//            duplicateLbl.setText("Error: Empty value(s) found. Please input value(s) into all fields.");
//        } 



//////////// TRIED USING REGEX TO ELIMINATE TEXT IN TEXT FIELDS, NOT WORKING //////////////////
//      String pat = "A-Za-z"; // \\S\\.\\+\\-\\,\\!\\@\\#\\$\\€\\%\\^\\\\&\\*\\(\\)\\;\\:\\/\\|\\<\\>\\\"\\'\\_\\?\\!\\#\\+";
//
//      // Create a Pattern object
//      Pattern r = Pattern.compile(pat);
//
//      // Now create matcher object.
//      Matcher l00, l01, l02, l03, l04, l10, l11, l12, l13, l14, l20, l21, l22, l23, l24;
//        l00 = r.matcher(line00Tf.getText());
//        l01 = r.matcher(line01Tf.getText());
//        l02 = r.matcher(line02Tf.getText());
//        l03 = r.matcher(line03Tf.getText());
//        l04 = r.matcher(line04Tf.getText());
//        l10 = r.matcher(line10Tf.getText());
//        l11 = r.matcher(line11Tf.getText());
//        l12 = r.matcher(line12Tf.getText());
//        l13 = r.matcher(line13Tf.getText());
//        l14 = r.matcher(line14Tf.getText());
//        l20 = r.matcher(line10Tf.getText());
//        l21 = r.matcher(line21Tf.getText());
//        l22 = r.matcher(line22Tf.getText());
//        l23 = r.matcher(line23Tf.getText());
//        l24 = r.matcher(line24Tf.getText());
//        
//        if ( (l00.find( )) || (l01.find( )) || (l02.find( )) || (l03.find( )) || (l04.find( )) || 
//              (l10.find( )) || (l11.find( )) || (l12.find( )) || (l13.find( )) || (l14.find( )) || 
//              (l20.find( )) || (l21.find( )) || (l22.find( )) || (l23.find( )) || (l24.find( )) ) {
//              
//              duplicateLbl.setText("Error: Problem with your numbers, please check them");
//        } // TRIED USING REGEX TO ELIMINATE TEXT IN TEXT FIELDS, NOT WORKING

        if((line00Tf.getText().equals("")) || (line01Tf.getText().equals("")) || (line02Tf.getText().equals("")) || (line03Tf.getText().equals("")) || (line04Tf.getText().equals(""))
          || (line10Tf.getText().equals("")) || (line11Tf.getText().equals("")) || (line12Tf.getText().equals("")) || (line13Tf.getText().equals("")) || (line04Tf.getText().equals(""))
          || (line20Tf.getText().equals("")) || (line21Tf.getText().equals("")) || (line22Tf.getText().equals("")) || (line23Tf.getText().equals("")) || (line24Tf.getText().equals(""))){ //This is to catch users who leaves a text field blank. 
            duplicateLbl.setText("Please ensure all fields have a value."); //eliminattes empty text fields
        }
        else{
        duplicateLbl.setText(""); //removes error message

            num[0][0] = Integer.parseInt(line00Tf.getText());
            num[0][1] = Integer.parseInt(line01Tf.getText());
            num[0][2] = Integer.parseInt(line02Tf.getText());
            num[0][3] = Integer.parseInt(line03Tf.getText());
            num[0][4] = Integer.parseInt(line04Tf.getText());
            num[1][0] = Integer.parseInt(line10Tf.getText());
            num[1][1] = Integer.parseInt(line11Tf.getText());
            num[1][2] = Integer.parseInt(line12Tf.getText());
            num[1][3] = Integer.parseInt(line13Tf.getText());
            num[1][4] = Integer.parseInt(line14Tf.getText());
            num[2][0] = Integer.parseInt(line20Tf.getText());
            num[2][1] = Integer.parseInt(line21Tf.getText());
            num[2][2] = Integer.parseInt(line22Tf.getText());
            num[2][3] = Integer.parseInt(line23Tf.getText());
            num[2][4] = Integer.parseInt(line24Tf.getText()); //hard coding is the only way we've found that will allow each text field to be converted into a 2D array
            
            secret[0] = Integer.parseInt(secretNum1Tf.getText());
            secret[1] = Integer.parseInt(secretNum2Tf.getText());
            secret[2] = Integer.parseInt(secretNum3Tf.getText());
            secret[3] = Integer.parseInt(secretNum4Tf.getText());
            secret[4] = Integer.parseInt(secretNum5Tf.getText());

            dupr.setNum(num);
            hasDuplicates = dupr.setHasDuplicates();
            outOfRange = dupr.setOutOfRange();

        if((hasDuplicates == true)||(outOfRange == true||secret[0] == 0)){ //if results are = 0, will not run (user needs tp generate/change results, same with duplicates and numbers below 1 and above 40.

            duplicateLbl.setText("Error: Duplicate found, number(s) out of range, or Results not generated");

//            displayResults0Lbl.setText(""); //not needed, no reason to clear results here

            matched1NumLbl.setText("");
            matched2NumLbl.setText("");
            matched3NumLbl.setText("");
        }

        else if((hasDuplicates == false)&&(outOfRange == false)){
            p1.setNum(num);
//            p1.createSecret();
//            secret = p1.getSecret(); //not needed as secret created in GUI (Generate/Change results button)
            p1.setSecret(secret);
            p1.computeCheckInput();
            correctL1 = p1.getCorrectL1();
            correctL2 = p1.getCorrectL2();
            correctL3 = p1.getCorrectL3();

            //prints secret to output
            System.out.println("Phase 1 Main Secret: " + Arrays.toString(secret)); //prints results to output
            System.out.println();


            displayResults0Lbl.setText(Integer.toString(secret[0]) + ", " + Integer.toString(secret[1]) + ", " + Integer.toString(secret[2]) + ", " + Integer.toString(secret[3]) + ", " + Integer.toString(secret[4])); //shows results as a normal String instead of an array/int

            matched1NumLbl.setText(Integer.toString(correctL1));
            matched2NumLbl.setText(Integer.toString(correctL2));
            matched3NumLbl.setText(Integer.toString(correctL3)); //shows which numbes are macthed with results
        }
        else{
           displayResults0Lbl.setText("An unknown error occured, please try again"); //catch-all error
        }
        }
    }//GEN-LAST:event_playBtnActionPerformed

    private void lottoph2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lottoph2BtnActionPerformed
        LottoPhase1GUI p1 = new LottoPhase1GUI();
        p1.setVisible(false);
        dispose(); //closes this GUI
        
        LottoPhase2GUI p2 = new LottoPhase2GUI();
        p2.setVisible(true);// opens Phase2 GUI
    }//GEN-LAST:event_lottoph2BtnActionPerformed

    private void quickPickL1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickPickL1BtnActionPerformed
        savedMessageLbl.setText("");
        quickPickL1 = new Random().ints(1, 40).distinct().limit(5).toArray(); //creates random numbers, 1 - 40 only, no duplicates
        
        line00Tf.setText(Integer.toString(quickPickL1[0]));
        line01Tf.setText(Integer.toString(quickPickL1[1]));
        line02Tf.setText(Integer.toString(quickPickL1[2]));
        line03Tf.setText(Integer.toString(quickPickL1[3]));
        line04Tf.setText(Integer.toString(quickPickL1[4])); //puts random numbers into line 1, no duplicates are entered, nor numbers below 1 or above 40

    }//GEN-LAST:event_quickPickL1BtnActionPerformed

    private void quickPickL2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickPickL2BtnActionPerformed
        savedMessageLbl.setText("");
        quickPickL2 = new Random().ints(1, 40).distinct().limit(5).toArray(); //creates random numbers, 1 - 40 only, no duplicates
        
        line10Tf.setText(Integer.toString(quickPickL2[0]));
        line11Tf.setText(Integer.toString(quickPickL2[1]));
        line12Tf.setText(Integer.toString(quickPickL2[2]));
        line13Tf.setText(Integer.toString(quickPickL2[3]));
        line14Tf.setText(Integer.toString(quickPickL2[4])); //puts random numbers into line 2, no duplicates are entered, nor numbers below 1 or above 40 
    }//GEN-LAST:event_quickPickL2BtnActionPerformed

    private void quickPickL3BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickPickL3BtnActionPerformed
        savedMessageLbl.setText("");
        quickPickL3 = new Random().ints(1, 40).distinct().limit(5).toArray(); //creates random numbers, 1 - 40 only, no duplicates
        
        line20Tf.setText(Integer.toString(quickPickL3[0]));
        line21Tf.setText(Integer.toString(quickPickL3[1]));
        line22Tf.setText(Integer.toString(quickPickL3[2]));
        line23Tf.setText(Integer.toString(quickPickL3[3]));
        line24Tf.setText(Integer.toString(quickPickL3[4])); //puts random numbers into line 3, no duplicates are entered, nor numbers below 1 or above 40
    }//GEN-LAST:event_quickPickL3BtnActionPerformed

    private void line23TfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_line23TfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_line23TfActionPerformed

    private void showSavedNumsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showSavedNumsBtnActionPerformed
        savedMessageLbl.setText("");
        
        File inFile;
        FileInputStream fStream;
        ObjectInputStream oStream; 
        
        try{
            inFile = new File("savedNumbers.data");
            fStream = new FileInputStream(inFile);
            oStream = new ObjectInputStream(fStream);
            
            if (inFile.exists()) {
                num = (int[][]) oStream.readObject();

                line00Tf.setText(Integer.toString(num[0][0]));
                line01Tf.setText(Integer.toString(num[0][1]));
                line02Tf.setText(Integer.toString(num[0][2]));
                line03Tf.setText(Integer.toString(num[0][3]));
                line04Tf.setText(Integer.toString(num[0][4])); //inputs the saved numbers of Line 1 into the Line 1 text fields
                
                line10Tf.setText(Integer.toString(num[1][0]));
                line11Tf.setText(Integer.toString(num[1][1]));
                line12Tf.setText(Integer.toString(num[1][2]));
                line13Tf.setText(Integer.toString(num[1][3])); 
                line14Tf.setText(Integer.toString(num[1][4])); //inputs the saved numbers of Line 1 into the Line 2 text fields
                
                line20Tf.setText(Integer.toString(num[2][0]));
                line21Tf.setText(Integer.toString(num[2][1]));
                line22Tf.setText(Integer.toString(num[2][2]));
                line23Tf.setText(Integer.toString(num[2][3]));
                line24Tf.setText(Integer.toString(num[2][4])); //inputs the saved numbers of Line 3 into the Line 1 text fields
                
                savedNumsDisplayL1Lbl.setText(Integer.toString(num[0][0]) + ", " + Integer.toString(num[0][1]) + ", " + Integer.toString(num[0][2]) + ", " + Integer.toString(num[0][3]) + ", " + Integer.toString(num[0][4]));
                savedNumsDisplayL2Lbl.setText(Integer.toString(num[1][0]) + ", " + Integer.toString(num[1][1]) + ", " + Integer.toString(num[1][2]) + ", " + Integer.toString(num[1][3]) + ", " + Integer.toString(num[1][4]));
                savedNumsDisplayL3Lbl.setText(Integer.toString(num[2][0]) + ", " + Integer.toString(num[2][1]) + ", " + Integer.toString(num[2][2]) + ", " + Integer.toString(num[2][3]) + ", " + Integer.toString(num[2][4])); // Prints saved numbers to screen
                
                savedMessageLbl.setText("Numbers inserted above.");
                
            }
            oStream.close();
        }
        catch(IOException e){
            savedNumsDisplayL1Lbl.setText("");
            savedNumsDisplayL2Lbl.setText("");
            savedNumsDisplayL3Lbl.setText(""); // if no numbers are saved, clears the printed values of the saved numbers (if any) 
            
            savedMessageLbl.setText("No numbers saved!"); //shows this message if no file exists

        }
        catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, "Error: " + e);  //catch-all error
        }
    }//GEN-LAST:event_showSavedNumsBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        savedMessageLbl.setText("");
        
                
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("H:mm.ss");
        LocalDateTime now = LocalDateTime.now(); //this generates the current time 
//        System.out.println(dtf.format(now)); //testing, not needed

        num[0][0] = Integer.parseInt(line00Tf.getText());
        num[0][1] = Integer.parseInt(line01Tf.getText());
        num[0][2] = Integer.parseInt(line02Tf.getText());
        num[0][3] = Integer.parseInt(line03Tf.getText());
        num[0][4] = Integer.parseInt(line04Tf.getText());
        num[1][0] = Integer.parseInt(line10Tf.getText());
        num[1][1] = Integer.parseInt(line11Tf.getText());
        num[1][2] = Integer.parseInt(line12Tf.getText());
        num[1][3] = Integer.parseInt(line13Tf.getText());
        num[1][4] = Integer.parseInt(line14Tf.getText());
        num[2][0] = Integer.parseInt(line20Tf.getText());
        num[2][1] = Integer.parseInt(line21Tf.getText());
        num[2][2] = Integer.parseInt(line22Tf.getText());
        num[2][3] = Integer.parseInt(line23Tf.getText());
        num[2][4] = Integer.parseInt(line24Tf.getText()); //this takes the numbers from the text fields and puts them in num
        
        if((num[0][0] == 0)|| (num[1][0] == 0) || (num[2][2] == 0)){
            savedMessageLbl.setText("Please ensure all numbers are entered before saving!"); //if numbers are not changed from the default 0, the numbers will not be saved
        }
        else{
        savedNumsDisplayL1Lbl.setText(Integer.toString(num[0][0]) + ", " + Integer.toString(num[0][1]) + ", " + Integer.toString(num[0][2]) + ", " + Integer.toString(num[0][3]) + ", " + Integer.toString(num[0][4]));
        savedNumsDisplayL2Lbl.setText(Integer.toString(num[1][0]) + ", " + Integer.toString(num[1][1]) + ", " + Integer.toString(num[1][2]) + ", " + Integer.toString(num[1][3]) + ", " + Integer.toString(num[1][4]));
        savedNumsDisplayL3Lbl.setText(Integer.toString(num[2][0]) + ", " + Integer.toString(num[2][1]) + ", " + Integer.toString(num[2][2]) + ", " + Integer.toString(num[2][3]) + ", " + Integer.toString(num[2][4])); // Prints saved numbers to screen
        
        savedNumbersTimeLbl.setText("Successfully saved numbers at " + dtf.format(now)); //shows time when file is saved. (Good for checking when the last time file was saved)
        
        File outFile;
        FileOutputStream fStream;
        ObjectOutputStream oStream;
        
        try {
            outFile = new File("savedNumbers.data");
            fStream = new FileOutputStream(outFile);
            oStream = new ObjectOutputStream(fStream);
            
            oStream.writeObject(num);

            savedMessageLbl.setText("Numbers saved!");

            oStream.close();  // this saves the numbers to file
            
        } 
        catch (IOException e) {
            System.out.println("Error: " + e); //catch-all error
        }
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
          savedMessageLbl.setText("");
          
          // THIS WAS JUST AN ALTERTATIVE TO DELETING THE SAVED FILE. THIS JUST REMOVES THE CONTENT IN THE FILE, WAS NOT WORKING. 
//        var[0][0] = 0;
//        var[0][1] = 0;
//        var[0][2] = 0;
//        var[1][0] = 0;
//        var[1][1] = 0;
//        var[1][2] = 0;
//        var[2][0] = 0;
//        var[2][1] = 0;
//        var[2][2] = 0;
//        
//        File outFile;
//        FileOutputStream fStream;
//        ObjectOutputStream oStream;
//        
//        try {
//            outFile = new File("savedNumbers.data");
//            fStream = new FileOutputStream(outFile);
//            oStream = new ObjectOutputStream(fStream);
//            
//            oStream.writeObject(var);
//
//            JOptionPane.showMessageDialog(null, "File reset to all zeros.");
//            
//            oStream.close();
//            
//        } catch (IOException e) {
//            System.out.println("Error writing to file: " + e);

            File savedNums = new File("savedNumbers.data");
            if (savedNums.exists()) {
                savedNums.delete();
                
                savedMessageLbl.setText("Saved numbers deleted!"); //deletes file if it exists
            }
            else{
                savedMessageLbl.setText("No saved numbers to delete!"); //error message to tell user there's no saved file to delete
            }
            
            savedNumsDisplayL1Lbl.setText("");
            savedNumsDisplayL2Lbl.setText("");
            savedNumsDisplayL3Lbl.setText("");
            savedNumbersTimeLbl.setText(""); //clears values in saved numbers that are visible on screen (printed)
    }//GEN-LAST:event_resetBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("H:mm:ss");
        LocalDateTime now = LocalDateTime.now(); // 

        currentTimeLbl.setText("Current time: " + dtf.format(now)); //hidden refrsh button that is clicked every second to update time. 
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void changeResultsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeResultsBtnActionPerformed
        savedMessageLbl.setText("");
        
        for(int i = 0; i<5; i++){ //can also be for(int i = 0; i < secret.length; i++)...
            secret = new Random().ints(1, 40).distinct().limit(5).toArray(); // -------- Will only work on JDK8 or higher -----------
        }
       
        secretNum1Tf.setText(Integer.toString(secret[0]));
        secretNum2Tf.setText(Integer.toString(secret[1]));
        secretNum3Tf.setText(Integer.toString(secret[2]));
        secretNum4Tf.setText(Integer.toString(secret[3]));
        secretNum5Tf.setText(Integer.toString(secret[4])); // gets secret from hidden text fields
        
        displayResults0Lbl.setText(Integer.toString(secret[0]) + ", " + Integer.toString(secret[1]) + ", " + Integer.toString(secret[2]) + ", " + Integer.toString(secret[3]) + ", " + Integer.toString(secret[4])); //prints results to screen 

        // This is the same code as the Generate results button. Both are active, as error message is near to Generate button, don't want user looking for button.
    }//GEN-LAST:event_changeResultsBtnActionPerformed

    private void secretNum1TfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secretNum1TfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secretNum1TfActionPerformed

    private void secretNum5TfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secretNum5TfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secretNum5TfActionPerformed

    private void genResultsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genResultsBtnActionPerformed
        savedMessageLbl.setText("");
        
        for(int i = 0; i<5; i++){ //can also be for(int i = 0; i < secret.length; i++)...
            secret = new Random().ints(1, 40).distinct().limit(5).toArray(); // creates results numbers
        }
        
        secretNum1Tf.setText(Integer.toString(secret[0]));
        secretNum2Tf.setText(Integer.toString(secret[1]));
        secretNum3Tf.setText(Integer.toString(secret[2]));
        secretNum4Tf.setText(Integer.toString(secret[3]));
        secretNum5Tf.setText(Integer.toString(secret[4])); // sets values into hidden text fields

        displayResults0Lbl.setText(Integer.toString(secret[0]) + ", " + Integer.toString(secret[1]) + ", " + Integer.toString(secret[2]) + ", " + Integer.toString(secret[3]) + ", " + Integer.toString(secret[4])); //prints results to screen
    }//GEN-LAST:event_genResultsBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        Button refresh = new Button();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LottoPhase1GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>
        Button td = new Button(); // creates button
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new LottoPhase1GUI().setVisible(true);
        });
    }

    public void actionPerformed (ActionEvent e){ // don't think overriding this is a good idea.
        if(e.getSource() == t){
            refreshBtn.doClick(); //clicks the hidden refresh button every second
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JSeparator bottomSep;
    private javax.swing.JButton changeResultsBtn;
    private javax.swing.JLabel currentTimeLbl;
    private javax.swing.JLabel displayResults0Lbl;
    private javax.swing.JLabel duplicateLbl;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton genResultsBtn;
    private javax.swing.JLabel genSecretLbl;
    private javax.swing.JTextField line00Tf;
    private javax.swing.JTextField line01Tf;
    private javax.swing.JTextField line02Tf;
    private javax.swing.JTextField line03Tf;
    private javax.swing.JTextField line04Tf;
    private javax.swing.JTextField line10Tf;
    private javax.swing.JTextField line11Tf;
    private javax.swing.JTextField line12Tf;
    private javax.swing.JTextField line13Tf;
    private javax.swing.JTextField line14Tf;
    private javax.swing.JLabel line1Lbl;
    private javax.swing.JTextField line20Tf;
    private javax.swing.JTextField line21Tf;
    private javax.swing.JTextField line22Tf;
    private javax.swing.JTextField line23Tf;
    private javax.swing.JTextField line24Tf;
    private javax.swing.JLabel line2Lbl;
    private javax.swing.JLabel line3Lbl;
    private javax.swing.JLabel lottoPhase1Lbl;
    private javax.swing.JLabel lottoPhase2TextLbl;
    private javax.swing.JButton lottoph2Btn;
    private javax.swing.JLabel matched1Lbl;
    private javax.swing.JLabel matched1NumLbl;
    private javax.swing.JLabel matched2Lbl;
    private javax.swing.JLabel matched2NumLbl;
    private javax.swing.JLabel matched3Lbl;
    private javax.swing.JLabel matched3NumLbl;
    private javax.swing.JSeparator middleSep;
    private javax.swing.JLabel mostRecentLbl;
    private javax.swing.JLabel phase1TextLbl;
    private javax.swing.JButton playBtn;
    private javax.swing.JButton quickPickL1Btn;
    private javax.swing.JButton quickPickL2Btn;
    private javax.swing.JButton quickPickL3Btn;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton resetBtn;
    private javax.swing.JLabel resultsLbl;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel savedLine1Lbl;
    private javax.swing.JLabel savedLine2;
    private javax.swing.JLabel savedLine3;
    private javax.swing.JLabel savedMessageLbl;
    private javax.swing.JLabel savedNumbersTextLbl;
    private javax.swing.JLabel savedNumbersTimeLbl;
    private javax.swing.JLabel savedNumsDisplayL1Lbl;
    private javax.swing.JLabel savedNumsDisplayL2Lbl;
    private javax.swing.JLabel savedNumsDisplayL3Lbl;
    private javax.swing.JTextField secretNum1Tf;
    private javax.swing.JTextField secretNum2Tf;
    private javax.swing.JTextField secretNum3Tf;
    private javax.swing.JTextField secretNum4Tf;
    private javax.swing.JTextField secretNum5Tf;
    private javax.swing.JLabel selectNumLbl;
    private javax.swing.JButton showSavedNumsBtn;
    private javax.swing.JSeparator topSep;
    // End of variables declaration//GEN-END:variables
}
